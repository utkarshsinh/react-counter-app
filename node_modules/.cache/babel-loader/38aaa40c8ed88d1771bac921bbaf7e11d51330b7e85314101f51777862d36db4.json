{"ast":null,"code":"var _jsxFileName = \"/Users/utkarshsinh/in28minutes/01-frontend/todo-app/src/components/learning-examples/LearningJavascript.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n// Objects Created dierectly\nconst person = {\n  name: 'Mitthu',\n  address: {\n    line1: '13222',\n    line2: 'Middleton Farmln',\n    city: 'herndon'\n  },\n  profiles: ['twitter', 'meta', 'linkedin']\n  // function\n  // eslint-disable-next-line array-callback-return\n  // printProfile: () => {\n  //     person.profiles.map(\n  //         (profile) => {\n  //             console.log(profile)\n  //         }\n  //     )\n  //     console.log(person.profiles[2])\n  // }\n};\n\n// functions can be stored as an object\n\n// const person = {\n//     profiles: ['twitter', 'meta', 'linkedin'],\n//     // Function to print all profiles\n//     printProfile: function() {\n//         for (let i = 0; i < this.profiles.length; i++) {\n//             console.log(this.profiles[i]);\n//         }\n//         // If you still need to specifically log the third profile\n//         console.log(this.profiles[2]);\n//     }\n// };\n\n// const person = {\n//     profiles: ['twitter', 'meta', 'linkedin'],\n//     // Use a function expression to ensure 'this' refers to the person object\n//     printProfile: function() {\n//         this.profiles.forEach(profile => console.log(profile));\n//         // Direct access if you specifically need the third profile\n//         console.log(this.profiles[2]);\n//     }\n// };\n\nexport default function LearningJavascript() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: person.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: person.address.city\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: person.profiles[1]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: person.printProfile()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_c = LearningJavascript;\nvar _c;\n$RefreshReg$(_c, \"LearningJavascript\");","map":{"version":3,"names":["person","name","address","line1","line2","city","profiles","LearningJavascript","_jsxDEV","_Fragment","children","fileName","_jsxFileName","lineNumber","columnNumber","printProfile","_c","$RefreshReg$"],"sources":["/Users/utkarshsinh/in28minutes/01-frontend/todo-app/src/components/learning-examples/LearningJavascript.jsx"],"sourcesContent":["// Objects Created dierectly\nconst person = {\n    name: 'Mitthu',\n    address:{\n        line1: '13222',\n        line2: 'Middleton Farmln',\n        city: 'herndon',\n    },\n    profiles : ['twitter', 'meta', 'linkedin'],\n    // function\n    // eslint-disable-next-line array-callback-return\n    // printProfile: () => {\n    //     person.profiles.map(\n    //         (profile) => {\n    //             console.log(profile)\n    //         }\n    //     )\n    //     console.log(person.profiles[2])\n    // }\n}\n\n// functions can be stored as an object\n\n// const person = {\n//     profiles: ['twitter', 'meta', 'linkedin'],\n//     // Function to print all profiles\n//     printProfile: function() {\n//         for (let i = 0; i < this.profiles.length; i++) {\n//             console.log(this.profiles[i]);\n//         }\n//         // If you still need to specifically log the third profile\n//         console.log(this.profiles[2]);\n//     }\n// };\n\n\n// const person = {\n//     profiles: ['twitter', 'meta', 'linkedin'],\n//     // Use a function expression to ensure 'this' refers to the person object\n//     printProfile: function() {\n//         this.profiles.forEach(profile => console.log(profile));\n//         // Direct access if you specifically need the third profile\n//         console.log(this.profiles[2]);\n//     }\n// };\n\n\n\nexport default function LearningJavascript(){\n    return (\n        <>\n        <div>{person.name}</div>\n        <div>{person.address.city}</div>\n        <div>{person.profiles[1]}</div>\n        <div>{ person.printProfile() }</div>\n        </>\n    )\n}"],"mappings":";;;AAAA;AACA,MAAMA,MAAM,GAAG;EACXC,IAAI,EAAE,QAAQ;EACdC,OAAO,EAAC;IACJC,KAAK,EAAE,OAAO;IACdC,KAAK,EAAE,kBAAkB;IACzBC,IAAI,EAAE;EACV,CAAC;EACDC,QAAQ,EAAG,CAAC,SAAS,EAAE,MAAM,EAAE,UAAU;EACzC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACJ,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA,eAAe,SAASC,kBAAkBA,CAAA,EAAE;EACxC,oBACIC,OAAA,CAAAC,SAAA;IAAAC,QAAA,gBACAF,OAAA;MAAAE,QAAA,EAAMV,MAAM,CAACC;IAAI;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACxBN,OAAA;MAAAE,QAAA,EAAMV,MAAM,CAACE,OAAO,CAACG;IAAI;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAChCN,OAAA;MAAAE,QAAA,EAAMV,MAAM,CAACM,QAAQ,CAAC,CAAC;IAAC;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAC/BN,OAAA;MAAAE,QAAA,EAAOV,MAAM,CAACe,YAAY,CAAC;IAAC;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC;EAAA,eAClC,CAAC;AAEX;AAACE,EAAA,GATuBT,kBAAkB;AAAA,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}