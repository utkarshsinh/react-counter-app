{"ast":null,"code":"var _jsxFileName = \"/Users/utkarshsinh/in28minutes/01-frontend/todo-app/src/components/counter/Counter.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './Counter.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Counter() {\n  _s();\n  //  [0, f], first one is thw value and the other one is to update the state\n  // const state = useState(0)\n  const [count, setCount] = useState(0);\n  function incrementCounter() {\n    // state[1](state[0] + 1)\n    // console.log(state[0])\n    // console.log(state[1])\n\n    setCount(count + 1);\n    console.log(count);\n    console.log('increment counter');\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Counter\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"count\",\n      children: \"0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"counterButton\",\n        onClick: incrementCounter,\n        children: \"+1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 13\n  }, this);\n}\n_s(Counter, \"oDgYfYHkD9Wkv4hrAPCkI/ev3YU=\");\n_c = Counter;\nvar _c;\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Counter","_s","count","setCount","incrementCounter","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/utkarshsinh/in28minutes/01-frontend/todo-app/src/components/counter/Counter.jsx"],"sourcesContent":["import { useState } from 'react'\nimport './Counter.css'\n\nexport default function Counter(){\n//  [0, f], first one is thw value and the other one is to update the state\n    // const state = useState(0)\n    const [count, setCount] = useState(0);\n\n    function incrementCounter(){\n        // state[1](state[0] + 1)\n        // console.log(state[0])\n        // console.log(state[1])\n\n        setCount(count + 1)\n        console.log(count)\n\n        console.log('increment counter')\n    }\n    return (\n            <div className = \"Counter\">\n                <span className=\"count\">0</span>\n                <div>\n                <button className=\"counterButton\" \n                        onClick={incrementCounter}\n                        >+1</button>\n                </div>\n            </div>\n    )\n}"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,eAAe;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtB,eAAe,SAASC,OAAOA,CAAA,EAAE;EAAAC,EAAA;EACjC;EACI;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;EAErC,SAASO,gBAAgBA,CAAA,EAAE;IACvB;IACA;IACA;;IAEAD,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;IACnBG,OAAO,CAACC,GAAG,CAACJ,KAAK,CAAC;IAElBG,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;EACpC;EACA,oBACQP,OAAA;IAAKQ,SAAS,EAAG,SAAS;IAAAC,QAAA,gBACtBT,OAAA;MAAMQ,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAC;IAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAChCb,OAAA;MAAAS,QAAA,eACAT,OAAA;QAAQQ,SAAS,EAAC,eAAe;QACzBM,OAAO,EAAET,gBAAiB;QAAAI,QAAA,EACzB;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAElB;AAACX,EAAA,CAzBuBD,OAAO;AAAAc,EAAA,GAAPd,OAAO;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}