{"ast":null,"code":"var _jsxFileName = \"/Users/utkarshsinh/in28minutes/01-frontend/todo-app/src/components/counter/CounterButton.jsx\";\nimport { useState } from 'react';\n// import './Counter.css'\nimport { PropTypes } from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CounterButton({\n  by,\n  incrementmethod,\n  decrementmethod\n}) {\n  // const [count, setCount] = useState(0);\n\n  console.log(by);\n  function incrementCounter() {\n    // setCount(count + by)\n    incrementmethod(by);\n  }\n  function decrementCounter() {\n    // setCount(count - by)\n    decrementmethod(by);\n  }\n  // We could also use lambda funcion instead of incrementcounter and decrement counter and dierectly useincrement or decrementmethod\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Counter\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"counterButton\",\n        onClick: incrementCounter,\n        children: [\"+\", by]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"counterButton\",\n        onClick: decrementCounter,\n        children: [\"-\", by]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 13\n  }, this);\n}\n_c = CounterButton;\nCounterButton.propTypes = {\n  by: PropTypes.number\n};\nCounterButton.defaultProps = {\n  by: 1\n};\nvar _c;\n$RefreshReg$(_c, \"CounterButton\");","map":{"version":3,"names":["useState","PropTypes","jsxDEV","_jsxDEV","CounterButton","by","incrementmethod","decrementmethod","console","log","incrementCounter","decrementCounter","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","number","defaultProps","$RefreshReg$"],"sources":["/Users/utkarshsinh/in28minutes/01-frontend/todo-app/src/components/counter/CounterButton.jsx"],"sourcesContent":["import { useState } from 'react'\n// import './Counter.css'\nimport {PropTypes} from 'prop-types'\n\n\nexport default function CounterButton({by, incrementmethod, decrementmethod}){\n    // const [count, setCount] = useState(0);\n\n    console.log(by)\n\n    function incrementCounter(){\n\n        // setCount(count + by)\n        incrementmethod(by);\n    }\n\n    function decrementCounter(){\n        \n        // setCount(count - by)\n        decrementmethod(by);\n    }\n    // We could also use lambda funcion instead of incrementcounter and decrement counter and dierectly useincrement or decrementmethod\n    return (\n            <div className = \"Counter\">\n                {/* <span className=\"count\">{count}</span> */}\n                <div>\n                <button className=\"counterButton\" \n                        onClick={incrementCounter}\n                        >+{by}</button>\n                 <button className=\"counterButton\" \n                        onClick={decrementCounter}\n                        >-{by}</button>\n                </div>\n            </div>\n    )\n}\n\nCounterButton.propTypes = {\n    by: PropTypes.number\n  }\n  \nCounterButton.defaultProps = {\n    by: 1\n  }"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC;AACA,SAAQC,SAAS,QAAO,YAAY;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGpC,eAAe,SAASC,aAAaA,CAAC;EAACC,EAAE;EAAEC,eAAe;EAAEC;AAAe,CAAC,EAAC;EACzE;;EAEAC,OAAO,CAACC,GAAG,CAACJ,EAAE,CAAC;EAEf,SAASK,gBAAgBA,CAAA,EAAE;IAEvB;IACAJ,eAAe,CAACD,EAAE,CAAC;EACvB;EAEA,SAASM,gBAAgBA,CAAA,EAAE;IAEvB;IACAJ,eAAe,CAACF,EAAE,CAAC;EACvB;EACA;EACA,oBACQF,OAAA;IAAKS,SAAS,EAAG,SAAS;IAAAC,QAAA,eAEtBV,OAAA;MAAAU,QAAA,gBACAV,OAAA;QAAQS,SAAS,EAAC,eAAe;QACzBE,OAAO,EAAEJ,gBAAiB;QAAAG,QAAA,GACzB,GAAC,EAACR,EAAE;MAAA;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,eACtBf,OAAA;QAAQS,SAAS,EAAC,eAAe;QAC1BE,OAAO,EAAEH,gBAAiB;QAAAE,QAAA,GACzB,GAAC,EAACR,EAAE;MAAA;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAElB;AAACC,EAAA,GA9BuBf,aAAa;AAgCrCA,aAAa,CAACgB,SAAS,GAAG;EACtBf,EAAE,EAAEJ,SAAS,CAACoB;AAChB,CAAC;AAEHjB,aAAa,CAACkB,YAAY,GAAG;EACzBjB,EAAE,EAAE;AACN,CAAC;AAAA,IAAAc,EAAA;AAAAI,YAAA,CAAAJ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}